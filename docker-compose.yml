version: '3.8'

services:
  # Traefik reverse proxy with SSL
  traefik:
    image: traefik:v3.0
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Redirect HTTP to HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      # Self-signed certificates for local development
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      # For production with real domain, use Let's Encrypt:
      # - --certificatesresolvers.letsencrypt.acme.httpChallenge=true
      # - --certificatesresolvers.letsencrypt.acme.httpChallenge.entrypoint=web
      # - --certificatesresolvers.letsencrypt.acme.email=your-email@example.com
      # - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik/dynamic:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - n8n-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_NON_ROOT_USER: n8n
      POSTGRES_NON_ROOT_PASSWORD: n8n_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - n8n-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis for queue management
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  # n8n main application
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      
      # Redis
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      
      # General settings
      - N8N_HOST=n8n.localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      
      # Security
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_USER_MANAGEMENT_DISABLED=false
      
      # Webhooks
      - WEBHOOK_URL=https://n8n.localhost
      
      # Email (optional - configure SMTP)
      # - N8N_EMAIL_MODE=smtp
      # - N8N_SMTP_HOST=your-smtp-host
      # - N8N_SMTP_PORT=587
      # - N8N_SMTP_USER=your-email@example.com
      # - N8N_SMTP_PASS=your-email-password
      # - N8N_SMTP_SENDER=your-email@example.com
      
      # Execution
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168  # 1 week
      
      # Security headers
      - N8N_SECURE_COOKIE=true
      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.localhost`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.services.n8n.loadbalancer.server.port=5678
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # n8n worker (optional - for better performance with many workflows)
  n8n-worker:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    command: worker
    environment:
      # Database (same as main n8n)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      
      # Redis
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      
      # Worker settings
      - NODE_ENV=production
      - EXECUTIONS_PROCESS=own
      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  traefik_letsencrypt:

networks:
  n8n-network:
    driver: bridge